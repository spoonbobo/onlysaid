name: Build Applications

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - development
  workflow_call:
    outputs:
      build-version:
        description: "Build version"
        value: ${{ jobs.build-apps.outputs.build-version }}

env:
  BUILD_VERSION: ${{ github.sha }}
  BUILD_NUMBER: ${{ github.run_number }}

jobs:
  build-apps:
    name: Build Next.js & Electron Apps
    runs-on: ubuntu-latest
    
    outputs:
      build-version: ${{ env.BUILD_VERSION }}
      
    steps:
      # 1. Setup & Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      # 2. Dependency Management
      - name: Configure npm for JFrog Artifactory
        run: |
          if [ -n "${{ secrets.JFROG_URL }}" ] && [ -n "${{ secrets.JFROG_TOKEN }}" ]; then
            echo "JFROG_CONFIGURED=true" >> $GITHUB_ENV
            cat > .npmrc << EOF
          registry=http://103.1.32.206:8080/artifactory/api/npm/oa-npm/
          //103.1.32.206:8080/artifactory/api/npm/oa-npm/:_authToken=${{ secrets.JFROG_TOKEN }}
          //103.1.32.206:8080/artifactory/api/npm/oa-npm/:always-auth=true
          EOF
          else
            echo "JFROG_CONFIGURED=false" >> $GITHUB_ENV
          fi
        continue-on-error: true
        
      - name: Install dependencies (Next.js)
        run: |
          npm config set fetch-timeout 60000
          npm config set fetch-retry-mintimeout 10000
          npm config set fetch-retry-maxtimeout 60000
          npm config set fetch-retries 2
          
          if [ -f ".npmrc" ] && [ "$JFROG_CONFIGURED" = "true" ]; then
            if timeout 30s npm ping 2>/dev/null; then
              timeout 120s npm ci || {
                rm -f .npmrc
                npm config delete registry 2>/dev/null || true
                npm ci
              }
            else
              rm -f .npmrc
              npm config delete registry 2>/dev/null || true
              npm ci
            fi
          else
            npm ci
          fi
        timeout-minutes: 10
        
      - name: Install dependencies (Electron)
        run: |
          cd onlysaid-electron
          npm config set fetch-timeout 60000
          npm config set fetch-retry-mintimeout 10000
          npm config set fetch-retry-maxtimeout 60000
          npm config set fetch-retries 2
          
          if [ -f "../.npmrc" ] && [ "$JFROG_CONFIGURED" = "true" ]; then
            cp ../.npmrc .
            if timeout 30s npm ping 2>/dev/null; then
              timeout 120s npm ci || {
                rm -f .npmrc
                npm config delete registry 2>/dev/null || true
                npm ci
              }
            else
              rm -f .npmrc
              npm config delete registry 2>/dev/null || true
              npm ci
            fi
          else
            npm ci
          fi
        timeout-minutes: 10
          
      # 3. Build Applications
      - name: Build Next.js Application
        env:
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          NODE_ENV: production
        run: |
          echo "Building Next.js application..."
          npm run build
          
      - name: Debug directory structure
        run: |
          echo "Current working directory: $(pwd)"
          echo "Repository contents:"
          ls -la
          echo "Looking for onlysaid-electron directory:"
          find . -name "onlysaid-electron" -type d
          
      - name: Build Electron Application (Windows)
        working-directory: ./onlysaid-electron
        run: |
          echo "Building Electron application for Windows..."
          npm run package:windows
          
      - name: Build Electron Application (All Platforms)
        working-directory: ./onlysaid-electron
        run: |
          echo "Building Electron application for all platforms..."
          npm run package
          
      # 4. Upload Build Artifacts
      - name: Upload Next.js Build
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build-${{ env.BUILD_VERSION }}
          path: |
            .next/
            public/
          retention-days: 7
          
      - name: Upload Electron Installers
        uses: actions/upload-artifact@v4
        with:
          name: electron-installers-${{ env.BUILD_VERSION }}
          path: onlysaid-electron/release/build/*
          retention-days: 7 